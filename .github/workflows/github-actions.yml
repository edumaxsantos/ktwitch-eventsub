name: Publish package to the Maven Central Repository and GitHub Packages
on:
  release:
    types: [created]

jobs:
  publish:
    name: Publish to Maven Central
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 22
      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      # Step 3: Import GPG Key
      - name: Import GPG Key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | base64 --decode > private.key
          gpg --batch --yes --import private.key
          rm private.key

      # Step 4: Configure GPG
      - name: Configure GPG
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          gpgconf --kill gpg-agent
          echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
          gpgconf --kill dirmngr
          echo RELOADAGENT | gpg-connect-agent
          export GPG_TTY=$(tty)

      # Step 5: Verify GPG Key Import
      - name: Verify GPG Key Import
        run: |
          gpg --list-secret-keys
          gpg --list-keys

      # Step 6: Cache Gradle Packages
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 7: Grant Execute Permission for Gradle Wrapper
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      # Step 8: Publish to Maven Central
      - name: Publish to Maven Central
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "GPG_PASSPHRASE=${GPG_PASSPHRASE}" >> $GITHUB_ENV
          ./gradlew publish nexusPublish --info